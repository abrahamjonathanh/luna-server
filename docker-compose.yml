version: '3.8'

services:
  db:
    image: postgres:latest
    container_name: pg-docker
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: explore
    ports:
      - "5433:5432"  # HOST : CONTAINER
    volumes:
      - pg-docker:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:alpine
    container_name: redis-docker
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data

  luna-server:
    build: .
    command: >
      sh -c "/entrypoint.sh &&
             python manage.py runserver 0.0.0.0:8000"    
    volumes:
      - .:/app
    env_file:
      - .env.production
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
        restart: true
      redis:
        condition: service_started

  celery-worker:
    build: .
    command: celery -A luna worker --loglevel=INFO --pool=solo
    volumes:
      - .:/app
    env_file:
      - .env.production
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
      luna-server:
        condition: service_started
  celery-beat:
    build: .
    command: celery -A luna beat --loglevel=INFO
    volumes:
      - .:/app
    env_file:
      - .env.production
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
      luna-server:
        condition: service_started

volumes:
  pg-docker:
  redis_data: